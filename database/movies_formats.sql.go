// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: movies_formats.sql

package database

import (
	"context"
)

const createMoviesFormat = `-- name: CreateMoviesFormat :one
INSERT INTO
    "movies_formats" ("slug", "display_name", "about")
VALUES
    ($1, $2, $3)
RETURNING
    id, created_at, display_name, slug, about
`

type CreateMoviesFormatParams struct {
	Slug        string
	DisplayName string
	About       string
}

func (q *Queries) CreateMoviesFormat(ctx context.Context, arg *CreateMoviesFormatParams) (MoviesFormat, error) {
	row := q.db.QueryRow(ctx, createMoviesFormat, arg.Slug, arg.DisplayName, arg.About)
	var i MoviesFormat
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.DisplayName,
		&i.Slug,
		&i.About,
	)
	return i, err
}

const deleteMoviesFormat = `-- name: DeleteMoviesFormat :exec
DELETE FROM "movies_formats"
WHERE
    id = $1
`

func (q *Queries) DeleteMoviesFormat(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, deleteMoviesFormat, id)
	return err
}

const getAllMoviesFormats = `-- name: GetAllMoviesFormats :many
SELECT
    id, created_at, display_name, slug, about
FROM
    "movies_formats"
`

func (q *Queries) GetAllMoviesFormats(ctx context.Context) ([]MoviesFormat, error) {
	rows, err := q.db.Query(ctx, getAllMoviesFormats)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []MoviesFormat
	for rows.Next() {
		var i MoviesFormat
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.DisplayName,
			&i.Slug,
			&i.About,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getMoviesFormatByID = `-- name: GetMoviesFormatByID :one
SELECT
    id, created_at, display_name, slug, about
FROM
    "movies_formats"
WHERE
    "id" = $1
`

func (q *Queries) GetMoviesFormatByID(ctx context.Context, id int64) (MoviesFormat, error) {
	row := q.db.QueryRow(ctx, getMoviesFormatByID, id)
	var i MoviesFormat
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.DisplayName,
		&i.Slug,
		&i.About,
	)
	return i, err
}
